R <- d10_ret
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
# Minimum Variance Porfolio - MVP
w <- dt[[1+i]]
mv <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
colnames(mv) <- "MVP"
# Risk Parity Portfolio - RPP
w <- df[[1+i]]
rp <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$RPP <- rp
ports_ret <- rbind(ports_ret, mv)
# Adding IBOV
R <- returns[, 'IBOV']
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
ib <- Return.portfolio(R,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$IBOV <- ib
ports_ret <- rbind(ports_ret, mv)
print(i)
}
# Adding IBOV
R <- returns[, 'IBOV']
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
ib <- Return.portfolio(R,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
ib
# Adding IBOV
R <- returns[, 'IBOV']
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
ib <- Return.portfolio(R,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$IBOV <- ib
ports_ret <- rbind(ports_ret, mv)
ports_ret
data_ini <- date(datas[13])
ports_ret <- xts(cbind(MVP=0, RPP=0, IBOV=0), data_ini)
# Calculando o Retorno do portfolio
for (i in 1:(length(datas)-13)){
# definindo o periodo  ----------------------------------------
data_fim <- date(datas[i+13])
R <- d10_ret
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
# Minimum Variance Porfolio - MVP
w <- dt[[1+i]]
mv <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
colnames(mv) <- "MVP"
# Risk Parity Portfolio - RPP
w <- df[[1+i]]
rp <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$RPP <- rp
ports_ret <- rbind(ports_ret, mv)
# Adding IBOV
R <- returns[, 'IBOV']
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
ib <- Return.portfolio(R,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$IBOV <- ib
ports_ret <- rbind(ports_ret, mv)
print(i)
}
# Calculando o Retorno do portfolio
for (i in 1:(length(datas)-13)){
# definindo o periodo  ----------------------------------------
data_fim <- date(datas[i+13])
R <- d10_ret
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
# Minimum Variance Porfolio - MVP
w <- dt[[1+i]]
mv <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
colnames(mv) <- "MVP"
# Risk Parity Portfolio - RPP
w <- df[[1+i]]
rp <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$RPP <- rp
ports_ret <- rbind(ports_ret, mv)
# Adding IBOV
R <- returns[, 'IBOV']
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
ib <- Return.portfolio(R,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$IBOV <- ib
ports_ret <- rbind(ports_ret, ib)
print(i)
}
ib
mv
mv$IBOV <- ib
mv
# Calculando o Retorno do portfolio
for (i in 1:(length(datas)-13)){
# definindo o periodo  ----------------------------------------
data_fim <- date(datas[i+13])
R <- d10_ret
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
# Minimum Variance Porfolio - MVP
w <- dt[[1+i]]
mv <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
colnames(mv) <- "MVP"
# Risk Parity Portfolio - RPP
w <- df[[1+i]]
rp <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$RPP <- rp
# Adding IBOV
R <- returns[, 'IBOV']
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
ib <- Return.portfolio(R,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$IBOV <- ib
ports_ret <- rbind(ports_ret, ib)
print(i)
}
data_ini <- date(datas[13])
ports_ret <- xts(cbind(MVP=0, RPP=0, IBOV=0), data_ini)
# Calculando o Retorno do portfolio
for (i in 1:(length(datas)-13)){
# definindo o periodo  ----------------------------------------
data_fim <- date(datas[i+13])
R <- d10_ret
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
# Minimum Variance Porfolio - MVP
w <- dt[[1+i]]
mv <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
colnames(mv) <- "MVP"
# Risk Parity Portfolio - RPP
w <- df[[1+i]]
rp <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$RPP <- rp
# Adding IBOV
R <- returns[, 'IBOV']
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
ib <- Return.portfolio(R,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$IBOV <- ib
ports_ret <- rbind(ports_ret, ib)
print(i)
}
mv
ports_ret
ports_ret <- rbind(ports_ret, ib)
ports_ret <- rbind(ports_ret, mv)
ports_ret <- xts(cbind(MVP=0, RPP=0, IBOV=0), data_ini)
# Calculando o Retorno do portfolio
for (i in 1:(length(datas)-13)){
# definindo o periodo  ----------------------------------------
data_fim <- date(datas[i+13])
R <- d10_ret
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
# Minimum Variance Porfolio - MVP
w <- dt[[1+i]]
mv <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
colnames(mv) <- "MVP"
# Risk Parity Portfolio - RPP
w <- df[[1+i]]
rp <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$RPP <- rp
# Adding IBOV
R <- returns[, 'IBOV']
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
ib <- Return.portfolio(R,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$IBOV <- ib
ports_ret <- rbind(ports_ret, mv)
print(i)
}
ports <- ports_ret
ports$MVP <- cumprod(1+ports_ret$MVP)
ports$RPP <- cumprod(1+ports_ret$RPP)
ports1 <- ports[index(ports)<="2019-12-30"]
ports2 <- ports[index(ports)>="2019-12-30"]
ports2$MVP <- ports2$MVP/ports2$MVP[[1]]
ports2$RPP <- ports2$RPP/ports2$RPP[[1]]
# Plot
ggplot(ports, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1)+
geom_line(aes(y=MVP, color = "MVP"), size=1)
head(ports)
tail(ports)
table.AnnualizedReturns(Return.calculate(ports))
table.AnnualizedReturns(Return.calculate(ports1))
table.AnnualizedReturns(Return.calculate(ports2))
returns[,'IBOV']
View(returns[,'IBOV'])
is.na(returns[, 'IBOV'])
returns[!is.na(returns[,'IBOV'])]
returns[!is.na(returns[,'IBOV']), 'IBOV']
# Adding IBOV
R <- returns[!is.na(returns[,'IBOV']), 'IBOV']
View(R)
data_ini <- date(datas[13])
ports_ret <- xts(cbind(MVP=0, RPP=0, IBOV=0), data_ini)
# Calculando o Retorno do portfolio
for (i in 1:(length(datas)-13)){
# definindo o periodo  ----------------------------------------
data_fim <- date(datas[i+13])
R <- d10_ret
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
# Minimum Variance Porfolio - MVP
w <- dt[[1+i]]
mv <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
colnames(mv) <- "MVP"
# Risk Parity Portfolio - RPP
w <- df[[1+i]]
rp <- Return.portfolio(R,
weights = w,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$RPP <- rp
# Adding IBOV
R <- returns[!is.na(returns[,'IBOV']), 'IBOV']
R <- R[index(R) > index(ports_ret)[nrow(ports_ret)]]
R <- R[index(R) < data_fim]
ib <- Return.portfolio(R,
rebalance_on = NA,
geometric = TRUE,
wealth.index = FALSE,
verbose = FALSE
)
mv$IBOV <- ib
ports_ret <- rbind(ports_ret, mv)
print(i)
}
ports <- ports_ret
ports$MVP <- cumprod(1+ports_ret$MVP)
ports$RPP <- cumprod(1+ports_ret$RPP)
ports1 <- ports[index(ports)<="2019-12-30"]
ports2 <- ports[index(ports)>="2019-12-30"]
ports2$MVP <- ports2$MVP/ports2$MVP[[1]]
ports2$RPP <- ports2$RPP/ports2$RPP[[1]]
# Plot
ggplot(ports, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1)+
geom_line(aes(y=MVP, color = "MVP"), size=1)
# Plot
ggplot(ports, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1)+
geom_line(aes(y=MVP, color = "MVP"), size=1)+
geom_line(aes(y=IBOV, color = "IBOV"), size=1)
ports$IBOV <- cumprod(1+ports_ret$IBOV)
# Plot
ggplot(ports, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1)+
geom_line(aes(y=MVP, color = "MVP"), size=1)+
geom_line(aes(y=IBOV, color = "IBOV"), size=1)
ports <- ports_ret
ports$MVP <- cumprod(1+ports_ret$MVP)
ports$RPP <- cumprod(1+ports_ret$RPP)
ports$IBOV <- cumprod(1+ports_ret$IBOV)
# Plot
ggplot(ports, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1)+
geom_line(aes(y=MVP, color = "MVP"), size=1)+
geom_line(aes(y=IBOV, color = "IBOV"), size=1)
head(ports)
tail(ports)
table.AnnualizedReturns(Return.calculate(ports))
table.AnnualizedReturns(Return.calculate(ports1))
table.AnnualizedReturns(Return.calculate(ports2))
ports <- ports_ret
ports$MVP <- cumprod(1+ports_ret$MVP)
ports$RPP <- cumprod(1+ports_ret$RPP)
ports$IBOV <- cumprod(1+ports_ret$IBOV)
# Plot
ggplot(ports, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1)+
geom_line(aes(y=MVP, color = "MVP"), size=1)+
geom_line(aes(y=IBOV, color = "IBOV"), size=1)
View(ports)
View(ports_ret)
ports_ret <- ports_ret[!is.na(ports_ret)]
ports_ret <- ports_ret[!is.na(ports_ret),]
ports_ret <- ports_ret[!is.na(ports_ret[,'IBOV']),]
ports <- ports_ret
ports$MVP <- cumprod(1+ports_ret$MVP)
ports$RPP <- cumprod(1+ports_ret$RPP)
ports$IBOV <- cumprod(1+ports_ret$IBOV)
# Plot
ggplot(ports, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1)+
geom_line(aes(y=MVP, color = "MVP"), size=1)+
geom_line(aes(y=IBOV, color = "IBOV"), size=1)
ports1 <- ports[index(ports)<="2019-12-30"]
ports2 <- ports[index(ports)>="2019-12-30"]
ports2$MVP <- ports2$MVP/ports2$MVP[[1]]
ports2$RPP <- ports2$RPP/ports2$RPP[[1]]
ports2$IBOV <- ports2$IBOV/ports2$IBOV[[1]]
# Plot
ggplot(ports, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1)+
geom_line(aes(y=MVP, color = "MVP"), size=1)+
geom_line(aes(y=IBOV, color = "IBOV"), size=1)
head(ports)
tail(ports)
table.AnnualizedReturns(Return.calculate(ports))
table.AnnualizedReturns(Return.calculate(ports1))
table.AnnualizedReturns(Return.calculate(ports2))
# table.CalendarReturns((RPP$MVP))
# table.CalendarReturns((RPP$RPP))
# Salvando os dados
save(ports,  file = "data/ports.rda")
save(ports1, file = "data/ports1.rda")
save(ports2, file = "data/ports2.rda")
# ----------  gráfico das cotações --------------------------------------
gdf <- ports
pgdf <- ggplot(gdf, aes(x=Index)) +
geom_line(aes(y=RPP,  color = "RPP"), size=1.5)+
geom_line(aes(y=MVP,  color = "MVP"), size=1.5)+
geom_line(aes(y=IBOV, color = "IBOV"), size=1.5)+
xlab("")+
ylab("")+
# ylim(-0.1,0.2)+
paletteer::scale_colour_paletteer_d("nbapalettes::kings_city", direction=-1) +
#scale_colour_brewer(palette="Dark2", direction = 1)+
theme_minimal()+
labs(title = "",
colour = "")+
#scale_y_continuous(breaks=c(0,1,2), labels = c("\u2113", "\u2113", "\u2113"))+
#scale_y_continuous(labels = scales::percent_format())+
# scale_x_date(date_breaks = "1 day", date_labels = "%b")+
theme(legend.position="bottom")
pgdf
# ----------  gráfico das cotações 1 --------------------------------------
name <- paste0(name, 1)
gdf <- ports1
pgdf <- ggplot(gdf, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1.5)+
geom_line(aes(y=MVP, color = "MVP"), size=1.5)+
geom_line(aes(y=IBOV, color = "IBOV"), size=1.5)+
xlab("")+
ylab("")+
# ylim(-0.1,0.2)+
paletteer::scale_colour_paletteer_d("nbapalettes::kings_city", direction=-1) +
#scale_colour_brewer(palette="Dark2", direction = 1)+
theme_minimal()+
labs(title = "",
colour = "")+
#scale_y_continuous(breaks=c(0,1,2), labels = c("\u2113", "\u2113", "\u2113"))+
#scale_y_continuous(labels = scales::percent_format())+
# scale_x_date(date_breaks = "1 day", date_labels = "%b")+
theme(legend.position="bottom")
pgdf
# ----------  gráfico das cotações 2 --------------------------------------
name <- paste0(gsub(".{1}$", "", name), 2)
gdf <- ports2
pgdf <- ggplot(gdf, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1.5)+
geom_line(aes(y=MVP, color = "MVP"), size=1.5)+
#  geom_line(aes(y=IBOV, color = "IBOV"), size=1.5)+
xlab("")+
ylab("")+
# ylim(-0.1,0.2)+
paletteer::scale_colour_paletteer_d("nbapalettes::kings_city", direction=-1) +
#scale_colour_brewer(palette="Dark2", direction = 1)+
theme_minimal()+
labs(title = "",
colour = "")+
#scale_y_continuous(breaks=c(0,1,2), labels = c("\u2113", "\u2113", "\u2113"))+
#scale_y_continuous(labels = scales::percent_format())+
# scale_x_date(date_breaks = "1 day", date_labels = "%b")+
theme(legend.position="bottom")
pgdf
# ----------  gráfico das cotações 2 --------------------------------------
name <- paste0(gsub(".{1}$", "", name), 2)
gdf <- ports2
pgdf <- ggplot(gdf, aes(x=Index)) +
geom_line(aes(y=RPP, color = "RPP"), size=1.5)+
geom_line(aes(y=MVP, color = "MVP"), size=1.5)+
geom_line(aes(y=IBOV, color = "IBOV"), size=1.5)+
xlab("")+
ylab("")+
# ylim(-0.1,0.2)+
paletteer::scale_colour_paletteer_d("nbapalettes::kings_city", direction=-1) +
#scale_colour_brewer(palette="Dark2", direction = 1)+
theme_minimal()+
labs(title = "",
colour = "")+
#scale_y_continuous(breaks=c(0,1,2), labels = c("\u2113", "\u2113", "\u2113"))+
#scale_y_continuous(labels = scales::percent_format())+
# scale_x_date(date_breaks = "1 day", date_labels = "%b")+
theme(legend.position="bottom")
pgdf
ls(globalenv())
ls()
ls(d10)
d10
